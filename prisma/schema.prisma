// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique(map: "email") @db.VarChar(255)
  name        String    @db.VarChar(100)
  gender      String?   @db.VarChar(15)
  birth       DateTime? @db.Date
  phoneNumber String    @map("phone_number") @db.VarChar(15)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  Canvas      Canvas[]

  @@map("user")
}

model Canvas {
  id     Int    @id @default(autoincrement())
  userId Int    @map("user_id")
  user   User   @relation(fields: [userId], references: [id])
  title  String @db.VarChar(100)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Post      Post[]

  @@map("canvas")
}

model Post {
  id          Int      @id @default(autoincrement())
  canvasId    Int      @map("canvas_id")
  canvas      Canvas   @relation(fields: [canvasId], references: [id])
  title       String   @db.VarChar(100)
  content     String   @db.VarChar(3000)
  postingDate DateTime @default(now())
  mainImage   String   @map("main_image")

  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  additionalImage additionalImage[]

  @@map("post")
}

model additionalImage {
  id     Int    @id @default(autoincrement())
  postId Int    @map("post_id")
  post   Post   @relation(fields: [postId], references: [id])
  image  String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("additional_image")
}
